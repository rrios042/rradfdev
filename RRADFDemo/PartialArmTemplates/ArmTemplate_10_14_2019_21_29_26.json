{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "RRADFDemo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CustAddDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "custable",
								"type": "DatasetReference"
							},
							"name": "sqlcust"
						},
						{
							"dataset": {
								"referenceName": "custaddr",
								"type": "DatasetReference"
							},
							"name": "sqlcustaddr"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CustJoin",
								"type": "DatasetReference"
							},
							"name": "custjoin"
						}
					],
					"transformations": [
						{
							"name": "CustAddJoin"
						}
					],
					"script": "\n\nsource(output(\n\t\tCustomerID as string,\n\t\tTerritoryID as string,\n\t\tAccountNumber as string,\n\t\tCustomerType as string,\n\t\trowguid as string,\n\t\tModifiedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sqlcust\nsource(output(\n\t\tCustomerID as string,\n\t\tAddressID as string,\n\t\tAddressTypeID as string,\n\t\trowguid as string,\n\t\tModifiedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sqlcustaddr\nsqlcust, sqlcustaddr join(sqlcust@CustomerID == sqlcustaddr@CustomerID,\n\tjoinType:'inner',\n\tbroadcast: 'both')~> CustAddJoin\nCustAddJoin sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true) ~> custjoin"
				}
			},
			"dependsOn": []
		}
	]
}