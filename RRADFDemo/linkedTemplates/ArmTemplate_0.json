{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "RRADFDemo"
		},
		"integrationRuntime_rradfdemo-selfhosted-ir": {
			"type": "string",
			"metadata": "Integration runtime name",
			"defaultValue": "rradfdemo-selfhosted-ir"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"rradfdemoAzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'rradfdemoAzureSqlDatabase'"
		},
		"rradlv2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'rradlv2'"
		},
		"AdventureWorks_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AdventureWorks'"
		},
		"rradfdemoSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'rradfdemoSqlServer'"
		},
		"rradlv2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rradls2.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rradfdemoAzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('rradfdemoAzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rradlv2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('rradlv2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('rradlv2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_rradfdemo-selfhosted-ir'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Self-hosted IR",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rradfdemoAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DBTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().DBTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradfdemoAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustJoin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rradlv2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "sqltbl"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradlv2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_47b')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rradlv2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "sqltbl"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradlv2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "rradfdemoAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "SalesKey",
						"type": "Int32"
					},
					{
						"name": "DateKey",
						"type": "DateTime"
					},
					{
						"name": "channelKey",
						"type": "Int32"
					},
					{
						"name": "StoreKey",
						"type": "Int32"
					},
					{
						"name": "ProductKey",
						"type": "Int32"
					},
					{
						"name": "PromotionKey",
						"type": "Int32"
					},
					{
						"name": "CurrencyKey",
						"type": "Int32"
					},
					{
						"name": "UnitCost",
						"type": "Decimal"
					},
					{
						"name": "UnitPrice",
						"type": "Decimal"
					},
					{
						"name": "SalesQuantity",
						"type": "Int32"
					},
					{
						"name": "ReturnQuantity",
						"type": "Int32"
					},
					{
						"name": "ReturnAmount",
						"type": "Decimal"
					},
					{
						"name": "DiscountQuantity",
						"type": "Int32"
					},
					{
						"name": "DiscountAmount",
						"type": "Decimal"
					},
					{
						"name": "TotalCost",
						"type": "Decimal"
					},
					{
						"name": "SalesAmount",
						"type": "Decimal"
					},
					{
						"name": "ETLLoadID",
						"type": "Int32"
					},
					{
						"name": "LoadDate",
						"type": "DateTime"
					},
					{
						"name": "UpdateDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[FactSales]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradfdemoAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rradfdemoAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradfdemoAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WatermarkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rradfdemoAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradfdemoAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/custable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rradlv2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesCustomer.csv",
						"fileSystem": "sqltbl"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "TerritoryID",
						"type": "String"
					},
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "CustomerType",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradlv2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/custaddr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rradlv2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesCustomerAddress.csv",
						"fileSystem": "sqltbl"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "AddressID",
						"type": "String"
					},
					{
						"name": "AddressTypeID",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradlv2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdventureWorks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('AdventureWorks_connectionString')]"
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_rradfdemo-selfhosted-ir')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_rradfdemo-selfhosted-ir'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rradfdemoSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('rradfdemoSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_rradfdemo-selfhosted-ir')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_rradfdemo-selfhosted-ir'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLServer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "rradfdemoSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "SalesKey",
						"type": "Int32"
					},
					{
						"name": "DateKey",
						"type": "DateTime"
					},
					{
						"name": "channelKey",
						"type": "Int32"
					},
					{
						"name": "StoreKey",
						"type": "Int32"
					},
					{
						"name": "ProductKey",
						"type": "Int32"
					},
					{
						"name": "PromotionKey",
						"type": "Int32"
					},
					{
						"name": "CurrencyKey",
						"type": "Int32"
					},
					{
						"name": "UnitCost",
						"type": "Decimal"
					},
					{
						"name": "UnitPrice",
						"type": "Decimal"
					},
					{
						"name": "SalesQuantity",
						"type": "Int32"
					},
					{
						"name": "ReturnQuantity",
						"type": "Int32"
					},
					{
						"name": "ReturnAmount",
						"type": "Decimal"
					},
					{
						"name": "DiscountQuantity",
						"type": "Int32"
					},
					{
						"name": "DiscountAmount",
						"type": "Decimal"
					},
					{
						"name": "TotalCost",
						"type": "Decimal"
					},
					{
						"name": "SalesAmount",
						"type": "Decimal"
					},
					{
						"name": "ETLLoadID",
						"type": "Int32"
					},
					{
						"name": "LoadDate",
						"type": "DateTime"
					},
					{
						"name": "UpdateDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[FactSales]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradfdemoSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rradfdemoSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rradfdemoSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_47b')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorks",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "Sales",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustAddDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "custable",
								"type": "DatasetReference"
							},
							"name": "sqlcust",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "custaddr",
								"type": "DatasetReference"
							},
							"name": "sqlcustaddr",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CustJoin",
								"type": "DatasetReference"
							},
							"name": "custjoin"
						}
					],
					"transformations": [
						{
							"name": "CustAddJoin"
						}
					],
					"script": "\n\nsource(output(\n\t\tCustomerID as string,\n\t\tTerritoryID as string,\n\t\tAccountNumber as string,\n\t\tCustomerType as string,\n\t\trowguid as string,\n\t\tModifiedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sqlcust\nsource(output(\n\t\tCustomerID as string,\n\t\tAddressID as string,\n\t\tAddressTypeID as string,\n\t\trowguid as string,\n\t\tModifiedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sqlcustaddr\nsqlcust, sqlcustaddr join(sqlcust@CustomerID == sqlcustaddr@CustomerID,\n\tjoinType:'left',\n\tbroadcast: 'both')~> CustAddJoin\nCustAddJoin sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> custjoin"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/custable')]",
				"[concat(variables('factoryId'), '/datasets/custaddr')]",
				"[concat(variables('factoryId'), '/datasets/CustJoin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy data from on premise SQL Server to SQL Azure1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from on premise SQL Server to SQL Azure.\n\nYou can also go to \"Copy Data Tool\" to get the pipeline for more connectors and scenarios.",
				"activities": [
					{
						"name": "SQL_to_SQLAzure",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"SalesKey": "SalesKey",
									"DateKey": "DateKey",
									"channelKey": "channelKey",
									"StoreKey": "StoreKey",
									"ProductKey": "ProductKey",
									"PromotionKey": "PromotionKey",
									"CurrencyKey": "CurrencyKey",
									"UnitCost": "UnitCost",
									"UnitPrice": "UnitPrice",
									"SalesQuantity": "SalesQuantity",
									"ReturnQuantity": "ReturnQuantity",
									"ReturnAmount": "ReturnAmount",
									"DiscountQuantity": "DiscountQuantity",
									"DiscountAmount": "DiscountAmount",
									"TotalCost": "TotalCost",
									"SalesAmount": "SalesAmount",
									"ETLLoadID": "ETLLoadID",
									"LoadDate": "LoadDate",
									"UpdateDate": "UpdateDate"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQLServer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLServer')]",
				"[concat(variables('factoryId'), '/datasets/SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IterateSQLTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LookupOldWaterMarkActivity",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from watermarktable where TableName  =  '@{item().TABLE_NAME}'",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "WatermarkDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LookupNewWaterMarkActivity",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select MAX(@{item().WaterMark_Column}) as NewWatermarkvalue from @{item().TABLE_NAME}",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "SourceDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "IncrementalCopyActivity",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LookupOldWaterMarkActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LookupNewWaterMarkActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().TABLE_NAME} where @{item().WaterMark_Column} > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' and @{item().WaterMark_Column} <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"sqlWriterStoredProcedureName": {
												"value": "@{item().StoredProcedureNameForMergeOperation}",
												"type": "Expression"
											},
											"sqlWriterTableType": {
												"value": "@{item().TableType}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SinkDataset",
											"type": "DatasetReference",
											"parameters": {
												"SinkTableName": "@{item().TABLE_NAME}"
											}
										}
									]
								},
								{
									"name": "StoredProceduretoWriteWatermarkActivity",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "IncrementalCopyActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_watermark]",
										"storedProcedureParameters": {
											"LastModifiedtime": {
												"value": {
													"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"TableName": {
												"value": {
													"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "rradfdemoAzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"tablelist": {
						"type": "object"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WatermarkDataSet')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/SinkDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/rradfdemoAzureSqlDatabase')]"
			]
		}
	]
}